How should a JSON object be represented?

List : Node -> Node -> Node -> Node

Each node can contain either a KVP, array, or an object.
An object can also contain a KVP, array, object, or a combination of all three.

Therefore each Node should be represented as an object.
The node can be identified as a KVP, array, or an object with an identifier.

Does this call for derived classes?

Perhaps the node class could contain one of three structs: KVP, array, or object. This could be done with an std::variant for the value since the key will never be an array or object.
The trick is going to be how to put an object inside of an object.
An object could contain a vector of Node objects with each one being initialized to a KVP, array, or an object.
Would that work?